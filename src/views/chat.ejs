<% layout('layout') %>
<div class="row">
  <div class="col-md-3">
    <h5>Phòng chat</h5>
    <ul class="list-group" id="room-list">
      <% rooms.forEach(r => { %>
        <li class="list-group-item" onclick="joinRoom('<%= r.id %>', '<%= r.name %>')"><%= r.name %></li>
      <% }) %>
    </ul>
    <button class="btn btn-success mt-2" id="create-room-btn">Tạo phòng</button>
  </div>
  <div class="col-md-9">
    <div class="card">
      <div class="card-header">Chat Room: <span id="room-name"></span></div>
      <div class="card-body" id="chat-messages" style="height:400px; overflow-y:auto;">
        <!-- Tin nhắn sẽ hiển thị ở đây -->
      </div>
      <div class="card-footer">
        <form id="chat-form" class="d-flex">
          <div class="input-group">
            <input type="text" id="chat-input" class="form-control" placeholder="Nhập tin nhắn...">
            <button class="btn btn-light" type="button" id="emoji-btn"><i class="fa fa-smile"></i></button>
            <button class="btn btn-primary" type="submit">Gửi</button>
          </div>
        </form>
      </div>
    </div>
  </div>
</div>
<script src="/socket.io/socket.io.js"></script>
<script src="/js/chat.js"></script>
<script>
let rooms =  JSON.stringify(rooms);
if (rooms.length > 0) {
  joinRoom(rooms[0].id, rooms[0].name);
}

document.getElementById('create-room-btn').addEventListener('click', function() {
  const name = prompt('Nhập tên phòng mới:');
  if (name) {
    fetch('/rooms', {
      method: 'POST',
      headers: {
        'Content-Type': 'application/json',
        'Authorization': 'Bearer ' + localStorage.getItem('token')
      },
      body: JSON.stringify({ name })
    })
    .then(res => res.json())
    .then(room => {
      // Thêm phòng mới vào danh sách và join luôn
      rooms.push(room);
      const li = document.createElement('li');
      li.className = 'list-group-item';
      li.innerText = room.name;
      li.onclick = () => joinRoom(room.id, room.name);
      document.getElementById('room-list').appendChild(li);
      joinRoom(room.id, room.name);
    });
  }
});

socket.on('message', (msg) => {
  const chat = document.getElementById('chat-messages');
  chat.innerHTML += `
    <div class="d-flex align-items-center mb-2">
      <img src="${msg.avatar || '/default-avatar.png'}" class="rounded-circle me-2" width="32" height="32">
      <b>${msg.from}:</b> ${msg.text}
      <span class="text-muted small ms-2"><i class="fa fa-clock"></i> ${new Date(msg.timestamp).toLocaleTimeString()}</span>
    </div>`;
  chat.scrollTop = chat.scrollHeight;
});
</script>
<script type="module">
import 'https://cdn.jsdelivr.net/npm/emoji-picker-element@^1/index.js';

const emojiBtn = document.getElementById('emoji-btn');
const chatInput = document.getElementById('chat-input');
let picker;

emojiBtn.addEventListener('click', () => {
  if (!picker) {
    picker = document.createElement('emoji-picker');
    picker.style.position = 'absolute';
    picker.style.bottom = '60px';
    picker.style.right = '30px';
    document.body.appendChild(picker);
    picker.addEventListener('emoji-click', event => {
      chatInput.value += event.detail.unicode;
      picker.remove();
      picker = null;
    });
  } else {
    picker.remove();
    picker = null;
  }
});
</script>